# Copyright 2020-2023 the .NET Foundation
# Licensed under the MIT License

# Create the Cranko release commit.

jobs:
- job: main
  pool:
    vmImage: windows-2022

  steps:

  # Set up the release commit. We do a `yarn install` to update the lockfile
  # with the proper internal versions once Cranko has applied them.

  - pwsh: |
      $d = Join-Path $Env:Temp cranko-$(New-Guid)
      [void][System.IO.Directory]::CreateDirectory($d)
      cd $d
      [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
      iex ((New-Object System.Net.WebClient).DownloadString('https://pkgw.github.io/cranko/fetch-latest.ps1'))
      echo "##vso[task.prependpath]$d"
    displayName: Install latest Cranko (Windows)

  - task: NodeTool@0
    displayName: Set up node.js
    inputs:
      versionSpec: '16'

  - bash: cranko release-workflow apply-versions
    displayName: Apply versions with Cranko

  # The --no-immutable allows the yarn.lock file to be modified -- in CI, the
  # default is that it can't be.
  - bash: yarn install --no-immutable
    displayName: yarn install

  - bash: |
      set -xeuo pipefail
      git add .
      cranko release-workflow commit
      git show
    displayName: Generate release commit

  # Publish release commit as an artifact -- subsequent stages will need it.

  - pwsh: |
      mkdir $(Build.ArtifactStagingDirectory)\git-release
      git bundle create $(Build.ArtifactStagingDirectory)\git-release\release.bundle origin/master..HEAD
    displayName: Bundle release commit

  - task: PublishPipelineArtifact@1
    displayName: Publish git bundle artifact
    inputs:
      targetPath: '$(Build.ArtifactStagingDirectory)/git-release'
      artifactName: git-release
